char Bufer[11];
int datoMalo=0;
int posicion=0;
int terminadoRDA=0;
int timeOut=0;
unsigned int16 contador15s=0;
int8 punto=0;
int tamanoBufer=11;

int buscandoErrores();
float valorIngresado();
void ingresarDatos();
void ingresarDatos()
{   
      posicion=0;
      datoMalo=0;
      terminadoRDA=0;
      timeOut=0;
      punto=0;
      While(terminadoRDA==0);                   //Mientras no aya terminado de recivir la trama se queda ciclado
      contador15s=0;                            //Reinicia el contador15s

}
int buscandoErrores()
{
   int error=0;
   if(datoMalo==1)                            //Si el dato ingresado no es correcto
      {
         printf("Error \n\n\r\r");
         if(timeOut==1)
         {
            printf("Se ha terminado el tiempo \n\n\r\r");
         }
         error=1;
      }
       if(Bufer[posicion-1]==0x0A || Bufer[posicion-1]==0x0D)     //Si la ultima tecla presionada fue enter, la hace igual a NULL
      {
         Bufer[posicion-1]=0;
      }
      if(Bufer[0]==0)                                 //Si no ingreso nada, lo manda a error
      {
         error=1;;
      }
      float Operando=valorIngresado();                                //Asigna la cifra casteandola a un flotante, a primer operando en "primerOperando
      if(Operando>9999.9999 || Operando<-9999.9999)          //Si el operando sale del valor permitido, lo manda a donde imprime Error
      {
         error=1;
      }
      return error;
}
float valorIngresado()
{
   int Operando=atof(Bufer);
   return Operando;
}

#int_rda
void rda_isr()
{     
      Bufer[posicion]=getc();                     //Guarda lo tecleado en el Bufer en la posicion actual
      disable_interrupts(int_TIMER0);            //Desactiva la interrupción de TMR0
      contador15s=0;
      if(Bufer[posicion]==0x0A || Bufer[posicion]==0x0D)     //Si recivio enter
      {
         terminadoRDA=1;
      }
      if(!(posicion<tamanoBufer-1))                         //Si no es menor de 9 (la ultima posición del vector para escribir), activa bandera para que termine la interrupción
      {
         terminadoRDA=1;
      }
      if(((Bufer[posicion]<'0' || Bufer[posicion]>'9') && (Bufer[posicion]!='-') && (Bufer[posicion]!='.') && (Bufer[posicion]!=0x0A && Bufer[posicion]!=0x0D)) || (posicion>0 && Bufer[posicion]=='-') || (punto>1))     //Si no ingreso un numero, un - o un .   El dato no es valido
      {
         datoMalo=1;
      }
      if(Bufer[posicion]=='.')
      {
         punto++;
      }
      posicion++;
      enable_interrupts(int_TIMER0);                  //Habilita la interrupcion de TMR0

}
#int_timer0
void contador_TMR0()
{
   if(contador15s>=916)
   {
      terminadoRDA=1;
      datoMalo=1;
      timeOut=1;
   }
   contador15s++;
}
